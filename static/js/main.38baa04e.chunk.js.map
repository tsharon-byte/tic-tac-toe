{"version":3,"sources":["index.js"],"names":["defaultState","currentPlayer","buttonsList","Array","fill","gameFinished","message","GameField","onClick","this","props","value","id","className","text","React","PureComponent","ClearGame","convertText","O","X","Board","mas","i","push","App","state","Object","assign","handleClick","bind","handleClearClick","setState","event","undefined","target","alert","buttons","slice","currentIx","includes","a","b","c","checkGameFinished","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.38baa04e.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nlet defaultState = {\n    currentPlayer: \"X\",\n    buttonsList: Array(9).fill(null),\n    gameFinished: false,\n    message: \"Ваш шаг, игрок X\"\n};\n\nclass GameField extends React.PureComponent {\n    render() {\n        return (<button onClick={this.props.onClick} value={this.props.id}\n                        className=\"GameField\">{this.props.text}</button>);\n    }\n}\n\nfunction ClearGame(props) {\n    return <div>\n        <button onClick={props.onClick} className={props.className}>{props.text}</button>\n    </div>\n}\n\nfunction convertText(text) {\n    const O = <span className=\"O\"><i className=\"far fa-circle\"></i></span>;\n    const X = <span className=\"X\"><i className=\"fas fa-times\"></i></span>;\n    switch (text) {\n        case 'X':\n            return X;\n        case 'O':\n            return O;\n        default:\n            return text;\n    }\n}\n\nclass Board extends React.PureComponent {\n    render() {\n        let mas = [];\n        for (let i = 0; i < 9; i++) {\n            let text = convertText(this.props.buttonsList[i]);\n            mas.push(<GameField id={i} onClick={this.props.onClick} text={text}/>);\n        }\n        return (\n            <div className=\"board\">\n                {mas}\n            </div>\n        );\n    }\n}\n\nfunction checkGameFinished(currentIx, buttonsList) {\n    let winner = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6]\n    ];\n    for (let mas of winner) {\n        if (mas.includes(+currentIx)) {\n            let [a, b, c] = mas;\n            if (buttonsList[a] === buttonsList[b] && buttonsList[b] === buttonsList[c])\n                return true;\n        }\n    }\n    return false;\n}\n\nclass App extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.state = Object.assign({}, defaultState);\n        this.handleClick = this.handleClick.bind(this);\n        this.handleClearClick = this.handleClearClick.bind(this);\n    }\n\n    handleClearClick() {\n        this.setState(defaultState);\n    }\n\n    handleClick(event) {\n        if (event.target.value == undefined || this.state.buttonsList[event.target.value] != null) {\n            return;\n        }\n        let currentPlayer = (this.state.currentPlayer === \"X\" ? \"O\" : \"X\");\n        if (this.state.gameFinished) {\n            alert(\"Игра окончена.  Победитель: \" + currentPlayer);\n            return;\n        }\n        let buttons = this.state.buttonsList.slice();\n        let message = \"\";\n        buttons[event.target.value] = this.state.currentPlayer;\n        let gameFinished = checkGameFinished(event.target.value, buttons);\n        if (gameFinished) {\n            message = \"Игра окончена.  Победитель: \" + this.state.currentPlayer;\n        } else {\n            gameFinished = !buttons.includes(null);\n            if (gameFinished) {\n                message = \"Игра окончена. Ничья.\"\n            } else {\n                message = \"Ваш ход, игрок \" + currentPlayer;\n            }\n        }\n        this.setState({\n            currentPlayer: currentPlayer,\n            buttonsList: buttons,\n            gameFinished: gameFinished,\n            message: message\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Крестики-нолики</h1>\n                <Board buttonsList={this.state.buttonsList} onClick={this.handleClick}/>\n                <label className={this.state.gameFinished ? \"Winner\" : \"Common\"}>\n                    {this.state.message}\n                </label>\n                <ClearGame onClick={this.handleClearClick} text=\"Начать игру\"\n                           className={this.state.gameFinished ? \"StartNewGame\" : \"GameOngoing\"}/>\n            </div>\n        );\n    }\n}\n\nReactDOM.render(<App/>, document.getElementById('root'));\n"],"sourceRoot":""}