{"version":3,"sources":["index.js"],"names":["defaultState","currentPlayer","buttonsList","Array","fill","gameFinished","message","GameField","onClick","this","props","value","id","className","text","React","PureComponent","ClearGame","convertText","O","X","Board","App","state","Object","assign","handleClick","bind","handleClearClick","setState","event","alert","target","buttons","slice","currentIx","mas","includes","a","b","c","checkGameFinished","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.328e5c14.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nlet defaultState = {\n    currentPlayer: \"X\",\n    buttonsList: Array(9).fill(null),\n    gameFinished: false,\n    message:\"Ваш шаг, игрок X\"\n};\n\nclass GameField extends React.PureComponent {\n    render() {\n        return (<button onClick={this.props.onClick} value={this.props.id}\n                        className=\"GameField\">{this.props.text}</button>);\n    }\n}\n\nfunction ClearGame(props) {\n    return <div>\n        <button onClick={props.onClick} className={props.className}>{props.text}</button>\n    </div>\n}\n\nfunction convertText(text) {\n    const O = <span className=\"O\"><i className=\"far fa-circle\"></i></span>;\n    const X = <span className=\"X\"><i className=\"fas fa-times\"></i></span>;\n    switch (text) {\n        case 'X':\n            return X;\n        case 'O':\n            return O;\n        default:\n            return text;\n    }\n}\n\nclass Board extends React.PureComponent {\n    render() {\n        return (\n            <div className=\"board\">\n                <table>\n                    <tbody>\n                    <tr>\n                        <td><GameField text={convertText(this.props.buttonsList[0])} id={0}\n                                       onClick={this.props.onClick}/></td>\n                        <td><GameField text={convertText(this.props.buttonsList[1])} id={1}\n                                       onClick={this.props.onClick}/></td>\n                        <td><GameField text={convertText(this.props.buttonsList[2])} id={2}\n                                       onClick={this.props.onClick}/></td>\n                    </tr>\n                    <tr>\n                        <td><GameField text={convertText(this.props.buttonsList[3])} id={3}\n                                       onClick={this.props.onClick}/></td>\n                        <td><GameField text={convertText(this.props.buttonsList[4])} id={4}\n                                       onClick={this.props.onClick}/></td>\n                        <td><GameField text={convertText(this.props.buttonsList[5])} id={5}\n                                       onClick={this.props.onClick}/></td>\n                    </tr>\n                    <tr>\n                        <td><GameField text={convertText(this.props.buttonsList[6])} id={6}\n                                       onClick={this.props.onClick}/></td>\n                        <td><GameField text={convertText(this.props.buttonsList[7])} id={7}\n                                       onClick={this.props.onClick}/></td>\n                        <td><GameField text={convertText(this.props.buttonsList[8])} id={8}\n                                       onClick={this.props.onClick}/></td>\n                    </tr>\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\nfunction checkGameFinished(currentIx, buttonsList) {\n    let winner = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6]\n    ];\n    for (let mas of winner) {\n        if (mas.includes(+currentIx)) {\n            let [a, b, c] = mas;\n            if (buttonsList[a] === buttonsList[b] && buttonsList[b] === buttonsList[c])\n                return true;\n        }\n    }\n    return false;\n}\n\nclass App extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.state = Object.assign({}, defaultState);\n        this.handleClick = this.handleClick.bind(this);\n        this.handleClearClick = this.handleClearClick.bind(this);\n    }\n\n    handleClearClick() {\n        this.setState(defaultState);\n    }\n\n    handleClick(event) {\n        let currentPlayer = (this.state.currentPlayer === \"X\" ? \"O\" : \"X\");\n        if (this.state.gameFinished) {\n            alert(\"Игра окончена.  Победитель: \" + currentPlayer);\n            return;\n        }\n        if (this.state.buttonsList[event.target.value] != null) {\n            return;\n        }\n        let buttons = this.state.buttonsList.slice();\n        let message=\"\";\n        buttons[event.target.value] = this.state.currentPlayer;\n        let gameFinished = checkGameFinished(event.target.value, buttons);\n        if(gameFinished){\n            message=\"Игра окончена.  Победитель: \" + this.state.currentPlayer;\n        }\n        else{gameFinished = !buttons.includes(null);\n        if(gameFinished){\n            message = \"Игра окончена. Ничья.\"\n        }\n        else{\n            message=\"Ваш ход, игрок \" + currentPlayer;\n        }}\n        this.setState({\n            currentPlayer: currentPlayer,\n            buttonsList: buttons,\n            gameFinished: gameFinished,\n            message:message\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Крестики-нолики</h1>\n                <Board buttonsList={this.state.buttonsList} onClick={this.handleClick}/>\n                <label className={this.state.gameFinished?\"Winner\":\"Common\"}>\n                    {this.state.message}\n                </label>\n                <ClearGame onClick={this.handleClearClick} text=\"Начать игру\"\n                           className={this.state.gameFinished ? \"StartNewGame\" : \"GameOngoing\"}/>\n            </div>\n        );\n    }\n}\n\nReactDOM.render(<App/>, document.getElementById('root'));\n"],"sourceRoot":""}